name: Build Aseprite for Windows (Visual Studio + Ninja)

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Choose release type: stable or beta'
        required: true
        default: stable

jobs:
  build:
    runs-on: windows-latest
    env:
      RELEASE_TYPE: ${{ github.event.inputs.release-type }}
    steps:
      - name: Checkout Action Repo
        uses: actions/checkout@v3

      - name: Setup Visual Studio Build Tools
        uses: ilammy/msvc-dev-cmd@v1

      - name: Clone Aseprite
        shell: bash
        run: |
          git clone --recursive https://github.com/aseprite/aseprite.git aseprite
          cd aseprite
          if [ "${{ env.RELEASE_TYPE }}" = "beta" ]; then
            git checkout beta
          else
            git checkout main
          fi

      - name: Download Skia
        shell: bash
        run: |
          mkdir -p skia
          cd skia
          RELEASE_URL=$(curl -sL -o /dev/null -w "%{url_effective}" https://github.com/aseprite/skia/releases/latest)
          SKIA_VERSION=$(basename $RELEASE_URL)
          SKIA_URL="https://github.com/aseprite/skia/releases/download/$SKIA_VERSION/Skia-Windows-Release-x64.zip"
          echo "Downloading Skia from: $SKIA_URL"
          curl -L "$SKIA_URL" -o Skia-Windows-Release-x64.zip
          unzip Skia-Windows-Release-x64.zip
          rm Skia-Windows-Release-x64.zip
          echo "SKIA_DIR=$(pwd)" >> $GITHUB_ENV
      
      - name: Download Freetype and Harfbuzz
        shell: bash
        run: |
          mkdir -p deps
          cd deps
          curl -L "https://download.savannah.gnu.org/releases/freetype/freetype-2.13.2.tar.gz" -o freetype.tar.gz
          7z x freetype.tar.gz -oFreetype
          cd Freetype #change working directory.
          7z x freetype-2.13.2.tar.gz -oFreetype
          cd .. #change working directory back.
          rm freetype.tar.gz Freetype/freetype-2.13.2.tar.gz
          curl -L "https://github.com/harfbuzz/harfbuzz/releases/download/8.3.0/harfbuzz-8.3.0-win64.zip" -o harfbuzz.zip
          unzip harfbuzz.zip
          rm harfbuzz.zip
          echo "FREETYPE_DIR=$(pwd)/Freetype/freetype-2.13.2" >> $GITHUB_ENV
          echo "HARFBUZZ_DIR=$(pwd)/harfbuzz-8.3.0-win64" >> $GITHUB_ENV

      - name: Configure CMake
        shell: cmd
        run: |
          cd aseprite
          mkdir build_configure
          cd build_configure
          cmake -G Ninja ^
            -DCMAKE_BUILD_TYPE=RelWithDebInfo ^
            -DUSE_WINSOCK=1 ^
            -D_WIN32_WINNT=0x0A00 ^
            ../

      - name: Configure & Build
        shell: cmd
        run: |
          cd aseprite
          mkdir build
          cd build
          set SKIA_LIB_NAME=$(dir %SKIA_DIR%/out/Release-x64/*.lib /b)
          set SKIA_LIB_PATH=%SKIA_DIR%/out/Release-x64/%SKIA_LIB_NAME%
          cmake -G Ninja ^
            -DCMAKE_BUILD_TYPE=RelWithDebInfo ^
            -DLAF_BACKEND=skia ^
            -DSKIA_DIR=%SKIA_DIR% ^
            -DSKIA_LIBRARY_DIR=%SKIA_DIR%/out/Release-x64 ^
            -DSKIA_LIBRARY=%SKIA_LIB_PATH% ^
            -DFREETYPE_INCLUDE_DIRS="%FREETYPE_DIR%/include;%FREETYPE_DIR%/include/freetype2" ^
            -DFREETYPE_LIBRARIES="%FREETYPE_DIR%/objs/x64/freetype.lib" ^
            -DHARFBUZZ_INCLUDE_DIRS="%HARFBUZZ_DIR%/include" ^
            -DHARFBUZZ_LIBRARIES="%HARFBUZZ_DIR%/lib/harfbuzz.lib" ^
            -DUSE_WINSOCK=1 ^
            -D_WIN32_WINNT=0x0A00 ^
            ../
          ninja aseprite

      - name: Archive Aseprite
        shell: cmd
        run: |
          cd aseprite\build
          zip -r aseprite-windows.zip aseprite.exe

      - name: Create draft release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v$(date +'%Y%m%d%H%M')
          name: "Aseprite ${{ env.RELEASE_TYPE }} release"
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: aseprite/build/aseprite-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
